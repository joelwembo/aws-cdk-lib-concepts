Resources:
  mycdkvpc037DA4AF:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: my-cdk-vpc
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/Resource
  mycdkvpcprivatesubnet1Subnet1Subnet2AC575F3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-private-subnet-1-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/private-subnet-1Subnet1/Subnet
  mycdkvpcprivatesubnet1Subnet1RouteTable177610F7:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-private-subnet-1-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/private-subnet-1Subnet1/RouteTable
  mycdkvpcprivatesubnet1Subnet1RouteTableAssociation77852D9C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet1RouteTable177610F7
      SubnetId:
        Ref: mycdkvpcprivatesubnet1Subnet1Subnet2AC575F3
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/private-subnet-1Subnet1/RouteTableAssociation
  mycdkvpcprivatesubnet1Subnet1DefaultRoute59820BDE:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: mycdkvpcpublicsubnet1Subnet1NATGatewayA2DD765A
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet1RouteTable177610F7
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/private-subnet-1Subnet1/DefaultRoute
  mycdkvpcprivatesubnet1Subnet2Subnet31DF6881:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-private-subnet-1-
                - Fn::Select:
                    - 1
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/private-subnet-1Subnet2/Subnet
  mycdkvpcprivatesubnet1Subnet2RouteTableACCA9D4B:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-private-subnet-1-
                - Fn::Select:
                    - 1
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/private-subnet-1Subnet2/RouteTable
  mycdkvpcprivatesubnet1Subnet2RouteTableAssociation23019B28:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet2RouteTableACCA9D4B
      SubnetId:
        Ref: mycdkvpcprivatesubnet1Subnet2Subnet31DF6881
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/private-subnet-1Subnet2/RouteTableAssociation
  mycdkvpcprivatesubnet1Subnet2DefaultRouteBBC0D191:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: mycdkvpcpublicsubnet1Subnet1NATGatewayA2DD765A
      RouteTableId:
        Ref: mycdkvpcprivatesubnet1Subnet2RouteTableACCA9D4B
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/private-subnet-1Subnet2/DefaultRoute
  mycdkvpcpublicsubnet1Subnet1Subnet8383DBBA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-public-subnet-1-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet1/Subnet
  mycdkvpcpublicsubnet1Subnet1RouteTableE1ABF705:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-public-subnet-1-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet1/RouteTable
  mycdkvpcpublicsubnet1Subnet1RouteTableAssociation160A4CBB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet1RouteTableE1ABF705
      SubnetId:
        Ref: mycdkvpcpublicsubnet1Subnet1Subnet8383DBBA
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet1/RouteTableAssociation
  mycdkvpcpublicsubnet1Subnet1DefaultRoute1255C1C4:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: mycdkvpcIGW4220D5A9
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet1RouteTableE1ABF705
    DependsOn:
      - mycdkvpcVPCGW2444B783
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet1/DefaultRoute
  mycdkvpcpublicsubnet1Subnet1EIPA046231A:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-public-subnet-1-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet1/EIP
  mycdkvpcpublicsubnet1Subnet1NATGatewayA2DD765A:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - mycdkvpcpublicsubnet1Subnet1EIPA046231A
          - AllocationId
      SubnetId:
        Ref: mycdkvpcpublicsubnet1Subnet1Subnet8383DBBA
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-public-subnet-1-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
    DependsOn:
      - mycdkvpcpublicsubnet1Subnet1DefaultRoute1255C1C4
      - mycdkvpcpublicsubnet1Subnet1RouteTableAssociation160A4CBB
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet1/NATGateway
  mycdkvpcpublicsubnet1Subnet2SubnetE104EC20:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-public-subnet-1-
                - Fn::Select:
                    - 1
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet2/Subnet
  mycdkvpcpublicsubnet1Subnet2RouteTable3099F008:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-public-subnet-1-
                - Fn::Select:
                    - 1
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet2/RouteTable
  mycdkvpcpublicsubnet1Subnet2RouteTableAssociation2ECC1C4A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet2RouteTable3099F008
      SubnetId:
        Ref: mycdkvpcpublicsubnet1Subnet2SubnetE104EC20
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet2/RouteTableAssociation
  mycdkvpcpublicsubnet1Subnet2DefaultRoute98E2F656:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: mycdkvpcIGW4220D5A9
      RouteTableId:
        Ref: mycdkvpcpublicsubnet1Subnet2RouteTable3099F008
    DependsOn:
      - mycdkvpcVPCGW2444B783
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/public-subnet-1Subnet2/DefaultRoute
  mycdkvpcisolatedsubnet1Subnet1Subnet79DD3BAF:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.4.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-isolated-subnet-1-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/isolated-subnet-1Subnet1/Subnet
  mycdkvpcisolatedsubnet1Subnet1RouteTable78317948:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-isolated-subnet-1-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/isolated-subnet-1Subnet1/RouteTable
  mycdkvpcisolatedsubnet1Subnet1RouteTableAssociation0E10D4C9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcisolatedsubnet1Subnet1RouteTable78317948
      SubnetId:
        Ref: mycdkvpcisolatedsubnet1Subnet1Subnet79DD3BAF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/isolated-subnet-1Subnet1/RouteTableAssociation
  mycdkvpcisolatedsubnet1Subnet2Subnet5C8345CD:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.4.16/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: isolated-subnet-1
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-isolated-subnet-1-
                - Fn::Select:
                    - 1
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/isolated-subnet-1Subnet2/Subnet
  mycdkvpcisolatedsubnet1Subnet2RouteTable69CCD17D:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - my-cdk-vpc-isolated-subnet-1-
                - Fn::Select:
                    - 1
                    - Fn::GetAZs: ""
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/isolated-subnet-1Subnet2/RouteTable
  mycdkvpcisolatedsubnet1Subnet2RouteTableAssociation416F7812:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: mycdkvpcisolatedsubnet1Subnet2RouteTable69CCD17D
      SubnetId:
        Ref: mycdkvpcisolatedsubnet1Subnet2Subnet5C8345CD
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/isolated-subnet-1Subnet2/RouteTableAssociation
  mycdkvpcIGW4220D5A9:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: my-cdk-vpc
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/IGW
  mycdkvpcVPCGW2444B783:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: mycdkvpcIGW4220D5A9
      VpcId:
        Ref: mycdkvpc037DA4AF
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/VPCGW
  mycdkvpcRestrictDefaultSecurityGroupCustomResource106C9E9F:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - mycdkvpc037DA4AF
          - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStarterStackStack/my-cdk-vpc/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :security-group/
                        - Fn::GetAtt:
                            - mycdkvpc037DA4AF
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: CdkStarterStackStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 4b996a3e5a083d5c78c6f30a8571a94fb7ec557eecbe54dbc065faba0d9076e6.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs18.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: CdkStarterStackStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.4b996a3e5a083d5c78c6f30a8571a94fb7ec557eecbe54dbc065faba0d9076e6
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/22PQU/DMAyFf8vuaVB7YHCcKoR2YVGHdkVpajZvrTMlTic07b/jACIcODnv5cnvc6Mf73WzsJdYueFUjdjr65atOymx3sA1+ro7O9W+0860ygScLcM29QSczfLqfGJ4tf0IxS/eKkbv0DJ6+g0rk/oRXVnxtDZ5vFh+lpKL/chqTQxBAn8sIflRKxbUwwTEN9VB9Ck4qU+R/VSk1P3/ZYKfcYCghA5Yrt4j7XN+k/icvpBaTwNm6psiP4A+xru5ftD1UteLY0SsQiLGCXT3PT8ByCvhfU8BAAA=
    Metadata:
      aws:cdk:path: CdkStarterStackStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  vpcId:
    Description: the ID of the VPC
    Value:
      Ref: mycdkvpc037DA4AF
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

